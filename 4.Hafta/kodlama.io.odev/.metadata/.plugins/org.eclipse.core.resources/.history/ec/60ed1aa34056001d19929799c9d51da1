package kodlama.io.Kodlama.io.Devs.dataAccess.concretes;

import java.util.ArrayList;
import java.util.List;

import kodlama.io.Kodlama.io.Devs.dataAccess.abstracts.SoftwareLanguageRepository;
import kodlama.io.Kodlama.io.Devs.entities.concretes.SoftwareLanguage;

public class InMemorySoftwareLanguageRepository implements SoftwareLanguageRepository{
	
	List<SoftwareLanguage> softwareLanguages;
	
	
	public InMemorySoftwareLanguageRepository() {
		softwareLanguages = new ArrayList<SoftwareLanguage>();
		softwareLanguages.add(new SoftwareLanguage(1, "C#"));
		softwareLanguages.add(new SoftwareLanguage(2, "Java"));
		softwareLanguages.add(new SoftwareLanguage(3, "Python"));
	}
	

	@Override	//içinde programlama dilleri barındıran bir liste döndürüyoruz.
	public List<SoftwareLanguage> getall() {
		
		return softwareLanguages;
	}


	@Override
	public SoftwareLanguage getIdLanguage(int id) throws Exception {
		for (SoftwareLanguage Id:softwareLanguages) {
			if (Id.getId() == id) {
				return Id;
			}
		}
		throw new Exception("This ID does not exist in the system");
	}
	
	
	
	public boolean available (SoftwareLanguage softwareLanguage) {
		boolean ctrl = false;
		for (SoftwareLanguage test:softwareLanguages) {
			if (test.getName().equals(softwareLanguage.getName()) && test.getId() == softwareLanguage.getId()) {
				ctrl = true;
			}
		}
		return ctrl;
	}

	
	
	@Override
	public void add(SoftwareLanguage softwareLanguage) {
		if (!available(softwareLanguage)) {
			if (!softwareLanguage.getName().equals(null)) {
				softwareLanguages.add(softwareLanguage);
			}
		}
		
	}


	@Override
	public void delete(SoftwareLanguage softwareLanguage) {
		
		
	}


	@Override
	public void update(SoftwareLanguage softwareLanguage) {
		// TODO Auto-generated method stub
		
	}


	
}
